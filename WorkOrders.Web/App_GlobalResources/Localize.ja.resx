<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>加える</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>量</value>
  </data>
  <data name="AppTitle" xml:space="preserve">
    <value>作業指示</value>
  </data>
  <data name="BrandAndModel" xml:space="preserve">
    <value>ブランド|型式</value>
  </data>
  <data name="CloseOrder" xml:space="preserve">
    <value>密集隊形</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>顧客</value>
  </data>
  <data name="CustomerAndVehicleData" xml:space="preserve">
    <value>顧客/車両データ</value>
  </data>
  <data name="CustomerDoesNotWantEstimate" xml:space="preserve">
    <value>顧客は推定を望んでいない</value>
  </data>
  <data name="DateFormat" xml:space="preserve">
    <value>MM / DD / YYYY</value>
  </data>
  <data name="IE" xml:space="preserve">
    <value>すなわち</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="NecessaryServices" xml:space="preserve">
    <value>必要なサービス</value>
  </data>
  <data name="NewOrder" xml:space="preserve">
    <value>新規注文</value>
  </data>
  <data name="OpenOrders" xml:space="preserve">
    <value>オープンオーダー</value>
  </data>
  <data name="OrderedServices" xml:space="preserve">
    <value>順序付けられたサービス</value>
  </data>
  <data name="PartsInstalled" xml:space="preserve">
    <value>インストールされている部品</value>
  </data>
  <data name="PlaceForStamp" xml:space="preserve">
    <value>（スタンプ）</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>価格</value>
  </data>
  <data name="PrintOrder" xml:space="preserve">
    <value>印刷注文</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>リフレッシュ</value>
  </data>
  <data name="RegNrAndOdometer" xml:space="preserve">
    <value>REG。</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>削除する</value>
  </data>
  <data name="RowNumber" xml:space="preserve">
    <value>r.n.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="SelectedWokOrder_Advice" xml:space="preserve">
    <value>ワークショップのアドバイス</value>
  </data>
  <data name="SelectedWokOrder_Approved" xml:space="preserve">
    <value>承認された</value>
  </data>
  <data name="SelectedWokOrder_ApprovedMax" xml:space="preserve">
    <value>承認された最大</value>
  </data>
  <data name="SelectedWokOrder_ApprovedMaxValue" xml:space="preserve">
    <value>MAXを承認した。</value>
  </data>
  <data name="SelectedWokOrder_CompletionDate" xml:space="preserve">
    <value>完了日</value>
  </data>
  <data name="SelectedWokOrder_Customer_Address" xml:space="preserve">
    <value>アドレス</value>
  </data>
  <data name="SelectedWokOrder_Customer_Contact" xml:space="preserve">
    <value>方にお問い合わせ</value>
  </data>
  <data name="SelectedWokOrder_Customer_Name" xml:space="preserve">
    <value>顧客</value>
  </data>
  <data name="SelectedWokOrder_Customer_Phone" xml:space="preserve">
    <value>電話</value>
  </data>
  <data name="SelectedWokOrder_Customer_Telephone" xml:space="preserve">
    <value>電話</value>
  </data>
  <data name="SelectedWokOrder_DateModified" xml:space="preserve">
    <value>日付</value>
  </data>
  <data name="SelectedWokOrder_DateReceived" xml:space="preserve">
    <value>受付日</value>
  </data>
  <data name="SelectedWokOrder_Deadline" xml:space="preserve">
    <value>仕事の締め切り</value>
  </data>
  <data name="SelectedWokOrder_DeliveredTo" xml:space="preserve">
    <value>に配信</value>
  </data>
  <data name="SelectedWokOrder_Employee" xml:space="preserve">
    <value>ユーザー</value>
  </data>
  <data name="SelectedWokOrder_EstimatedValue" xml:space="preserve">
    <value>評価額</value>
  </data>
  <data name="SelectedWokOrder_ForWorkShop" xml:space="preserve">
    <value>ワークショップのために</value>
  </data>
  <data name="SelectedWokOrder_Number" xml:space="preserve">
    <value>作業命令数Nr</value>
  </data>
  <data name="SelectedWokOrder_RequestForEstimate" xml:space="preserve">
    <value>見積もりの&amp;#8203;&amp;#8203;ための要求</value>
  </data>
  <data name="SelectedWokOrder_Vehicle_EngineNumber" xml:space="preserve">
    <value>エンジン番号</value>
  </data>
  <data name="SelectedWokOrder_Vehicle_Manufacturer" xml:space="preserve">
    <value>ブランド</value>
  </data>
  <data name="SelectedWokOrder_Vehicle_Model" xml:space="preserve">
    <value>モデル</value>
  </data>
  <data name="SelectedWokOrder_Vehicle_RegistrationNumber" xml:space="preserve">
    <value>REG。</value>
  </data>
  <data name="SelectedWokOrder_Vehicle_VIN" xml:space="preserve">
    <value>VIN</value>
  </data>
  <data name="Signature" xml:space="preserve">
    <value>署名</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>合計</value>
  </data>
  <data name="TotalParts" xml:space="preserve">
    <value>総パーツ</value>
  </data>
  <data name="TotalWork" xml:space="preserve">
    <value>総仕事量</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>ユニット</value>
  </data>
  <data name="Units" xml:space="preserve">
    <value>&amp;quot;ピース&amp;quot;、 &amp;quot;時間&amp;quot;</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>ユーザー</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="WorkExecutionReport" xml:space="preserve">
    <value>作業実行レポート</value>
  </data>
  <data name="WorkLimitsAndDeadlines" xml:space="preserve">
    <value>仕事の制限や締め切り</value>
  </data>
  <data name="WorkOrderData" xml:space="preserve">
    <value>作業指示情報</value>
  </data>
  <data name="WorkPerformed" xml:space="preserve">
    <value>実行された作業</value>
  </data>
</root>